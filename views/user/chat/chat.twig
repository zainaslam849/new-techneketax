{% extends 'user/master.twig' %}
{% block content %}
    <input type="text" id="activeUserID" hidden>
    <!--  BEGIN CONTENT AREA  -->
    <div id="content" class="main-content">
        <div class="layout-px-spacing">
            <div class="middle-content container-xxl p-0">
                <div id="call-ringing"></div>

                <div class="chat-section layout-top-spacing">
                    <div class="row">
                        <div class="col-xl-12 col-lg-12 col-md-12">
                            <div class="chat-system">
                                <div class="hamburger"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-menu mail-menu d-lg-none"><line x1="3" y1="12" x2="21" y2="12"></line><line x1="3" y1="6" x2="21" y2="6"></line><line x1="3" y1="18" x2="21" y2="18"></line></svg></div>
                                <div class="user-list-box">
                                    <div class="search">
                                        <input type="text" class="form-control" placeholder="Search User" />
                                    </div>
                                    <div class="people">
                                        {% for user in chatUsers %}
                                        <div class="person" data-chat="{{ user.id }}">
                                            <div class="user-info">
                                                <div class="f-head">
                                                    <img src="{{ env.APP_URL }}assets/dashboard/src/assets/img/profile-4.jpeg" alt="avatar">
                                                </div>
                                                <div class="f-body">
                                                    <div class="meta-info">
                                                        <span class="user-name" data-name="{{ user.fname }} {{ user.lname }}">{{ user.fname }} {{ user.lname }}</span>
                                                        <span class="user-meta-time">2:09 PM</span>
                                                    </div>
                                                    <span class="preview">How do you do?</span>
                                                </div>
                                            </div>
                                        </div>
                                        {% endfor %}
                                    </div>
                                </div>
                                <div class="chat-box">
                                    <div class="chat-not-selected">
                                        <p> <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-message-square"><path d="M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"></path></svg> Click User To Chat</p>
                                    </div>
                                    <div class="chat-box-inner">
                                        <div class="chat-meta-user">
                                            <div class="current-chat-user-name"><span><img src="{{ env.APP_URL }}assets/dashboard/src/assets/img/90x90.jpg" alt="dynamic-image"><span class="name"></span></span></div>
                                            <div class="chat-action-btn align-self-center">
{#                                                <span id="audio-call" >#}
{#                                                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-phone  phone-call-screen"><path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"></path></svg>#}
{#                                                </span>#}

                                                <span id="video-call">
                                                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-phone  phone-call-screen"><path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"></path></svg>
{#                                                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-video video-call-screen"><polygon points="23 7 16 12 23 17 23 7"></polygon><rect x="1" y="5" width="15" height="14" rx="2" ry="2"></rect></svg>#}
                                                </span>

                                                <div class="dropdown d-inline-block">
                                                    <a class="dropdown-toggle" href="#" role="button" id="dropdownMenuLink-2" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-more-vertical"><circle cx="12" cy="12" r="1"></circle><circle cx="12" cy="5" r="1"></circle><circle cx="12" cy="19" r="1"></circle></svg>
                                                    </a>
                                                    <div class="dropdown-menu left" aria-labelledby="dropdownMenuLink-2">
                                                        <a class="dropdown-item" href="javascript:void(0);"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-settings"><circle cx="12" cy="12" r="3"></circle><path d="M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z"></path></svg> Settings</a>
                                                        <a class="dropdown-item" href="javascript:void(0);"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-mail"><path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"></path><polyline points="22,6 12,13 2,6"></polyline></svg> Mail</a>
                                                        <a class="dropdown-item" href="javascript:void(0);"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-copy"><rect x="9" y="9" width="13" height="13" rx="2" ry="2"></rect><path d="M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"></path></svg> Copy</a>
                                                        <a class="dropdown-item" href="javascript:void(0);"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-trash-2"><polyline points="3 6 5 6 21 6"></polyline><path d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"></path><line x1="10" y1="11" x2="10" y2="17"></line><line x1="14" y1="11" x2="14" y2="17"></line></svg> Delete</a>
                                                        <a class="dropdown-item" href="javascript:void(0);"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-share-2"><circle cx="18" cy="5" r="3"></circle><circle cx="6" cy="12" r="3"></circle><circle cx="18" cy="19" r="3"></circle><line x1="8.59" y1="13.51" x2="15.42" y2="17.49"></line><line x1="15.41" y1="6.51" x2="8.59" y2="10.49"></line></svg> Share</a>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="chat-conversation-box">
                                            <div id="chat-conversation-box-scroll" class="chat-conversation-box-scroll">
                                                {% for user in chatUsers %}
                                                <div class="chat" data-chat="{{ user.id }}">

                                                </div>
                                                {% endfor %}
                                            </div>
                                        </div>
                                        <div class="chat-footer">
                                            <div class="chat-input">
                                                <form class="chat-form" action="javascript:void(0);">
                                                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-message-square"><path d="M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"></path></svg>
                                                    <input type="text" class="mail-write-box form-control" placeholder="Message"/>
                                                </form>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!--  END CONTENT AREA  -->
    <script src="https://code.jquery.com/jquery-3.7.1.min.js" integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script>
    <!-- PerfectScrollbar CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/perfect-scrollbar@1.5.3/css/perfect-scrollbar.min.css">
    <!-- PerfectScrollbar JavaScript -->
    <script src="https://cdn.jsdelivr.net/npm/perfect-scrollbar@1.5.3/dist/perfect-scrollbar.min.js"></script>
    <script>
        function getMessages(userId) {
            $.ajax({
                url: `/chat/messages/${userId}`,
                method: 'GET',
                dataType: 'json',
                success: function(response) {
                    const chatContainer = $(`.chat[data-chat="${userId}"]`);
                    chatContainer.find('.bubble').remove();
                    const conversationStart = chatContainer.find('.conversation-start');
                    conversationStart.remove();
                    let currentDate = '';
                    response.messages.forEach(message => {
                        const messageDate = new Date(message.timestamp).toLocaleDateString();
                        if (messageDate !== currentDate) {
                            currentDate = messageDate;
                            const dateElement = `
                        <div class="conversation-start">
                            <span>${currentDate}</span>
                        </div>`;
                            chatContainer.append(dateElement);
                        }
                        const messageClass = message.sender === 'me' ? 'bubble me' : 'bubble you';
                        const messageElement = `
                    <div class="${messageClass}">
                        ${message.message}
<!--<div> <small>12:20pm <i style="font-size: 13px;" class="fa fa-trash ml-3 text-danger"></i></small></div>-->
                    </div>

                    `;
                        chatContainer.append(messageElement);
                    });
                    chatContainer.scrollTop(chatContainer[0].scrollHeight);
                },
                error: function(xhr, status, error) {
                    console.error();
                    notie.alert({ type: 'warning', text: 'Error fetching messages: '+xhr.responseText })

                }
            });
        }
        function formatTimestamp(timestamp) {
            const date = new Date(timestamp);
            const options = {
                hour: '2-digit',
                minute: '2-digit',
                second: '2-digit',
                hour12: true
            };
            return date.toLocaleTimeString(undefined, options);
        }

        const ws = new WebSocket('ws://localhost:8005');
        ws.onopen = function() {
            console.log('WebSocket connection established');
            // notie.alert({ type: 'success', text: 'You are now Online.' })
        };
        ws.onmessage = function(event) {
            const message = JSON.parse(event.data);
            const activeChat = document.querySelector('.chat.active-chat');

            if (activeChat) {
                const messageElement = document.createElement('div');
                messageElement.classList.add('bubble', 'you');
                messageElement.textContent = message.message;
                activeChat.appendChild(messageElement);
                const chatBox = document.querySelector('.chat-conversation-box');
                chatBox.scrollTop = chatBox.scrollHeight;
            } else {
                console.error('No active chat found.');
            }
        };

        ws.onclose = function() {
            console.log('WebSocket connection closed');
            // notie.alert({ type: 'warning', text: 'You are now offline.', time:2})

        };

        ws.onerror = function(error) {
            console.error('WebSocket error:', error);
        };
        $('.user-list-box .person').on('click', function() {

            const userId = $(this).attr('data-chat');
            $('#activeUserID').val(userId);
            getMessages(userId);
            if ($(this).hasClass('active')) {
                return false;
            } else {
                const findChat = $(this).attr('data-chat');
                const personName = $(this).find('.user-name').text();
                const personImage = $(this).find('img').attr('src');

                $(this).parents('.chat-system').find('.chat-box .chat-not-selected').hide();
                $(this).parents('.chat-system').find('.chat-box .chat-box-inner').show();

                if (window.innerWidth <= 767) {
                    $('.chat-box .current-chat-user-name .name').html(personName.split(' ')[0]);
                } else if (window.innerWidth > 767) {
                    $('.chat-box .current-chat-user-name .name').html(personName);
                }
                $('.chat-box .current-chat-user-name img').attr('src', personImage);
                $('.chat').removeClass('active-chat');
                $('.user-list-box .person').removeClass('active');
                $('.chat-box .chat-box-inner').css('height', '100%');
                $('.chat-box .overlay-phone-call').css('display', 'block');
                $('.chat-box .overlay-video-call').css('display', 'block');
                $(this).addClass('active');
                $('.chat[data-chat="' + findChat + '"]').addClass('active-chat');

                if ($(this).parents('.user-list-box').hasClass('user-list-box-show')) {
                    $(this).parents('.user-list-box').removeClass('user-list-box-show');
                }
                $('.chat-meta-user').addClass('chat-active');
                $('.chat-box').css('height', 'calc(100vh - 158px)');
                $('.chat-footer').addClass('chat-active');

                new PerfectScrollbar('.chat-conversation-box', {
                    suppressScrollX: true
                });

                const getScrollContainer = document.querySelector('.chat-conversation-box');
                getScrollContainer.scrollTop = getScrollContainer.scrollHeight;
            }
        });

        // Initialize PerfectScrollbar for user list and chat conversation box
        new PerfectScrollbar('.people', {
            suppressScrollX: true
        });
        $('.mail-write-box').on('keydown', function(event) {
            if (event.key === 'Enter') {
                event.preventDefault();
                const chatInput = $(this);
                const chatMessageValue = chatInput.val();
                const activeChat = $('.chat.active-chat');
                const receiverId = activeChat.attr('data-chat');
                const senderId ='{{ loginId }}'; //$('.chat-meta-user').data('user-id'); // Example, adjust as needed

                if (chatMessageValue === '') {
                    return;
                }

                const messageData = {
                    sender_id: senderId,
                    receiver_id: receiverId,
                    message: chatMessageValue
                };

                console.log('Sending message:', messageData);
                ws.send(JSON.stringify(messageData));
                const $messageHtml = $('<div class="bubble me">' + chatMessageValue + '</div>');
                activeChat.append($messageHtml);
                const getScrollContainer = document.querySelector('.chat-conversation-box');
                getScrollContainer.scrollTop = getScrollContainer.scrollHeight;

                chatInput.val('');
            }
        });
        $('.hamburger, .chat-system .chat-box .chat-not-selected p').on('click', function() {
            $(this).parents('.chat-system').find('.user-list-box').toggleClass('user-list-box-show');
        });
        $('.search > input').on('keyup', function() {
            const rex = new RegExp($(this).val(), 'i');
            $('.people .person').hide();
            $('.people .person').filter(function() {
                return rex.test($(this).text());
            }).show();
        });

        $(document).ready(function() {
            $('#audio-call').click(function() {
                var activeUserID = $('#activeUserID').val();
                window.location.href = '/call/ring/' + activeUserID;
            });
            $('#video-call').click(function() {
                var activeUserID = $('#activeUserID').val();
                window.location.href = '/video-call/ring/' + activeUserID;
            });
        });

    </script>

{% endblock %}