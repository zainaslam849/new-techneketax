{% extends 'user/master_call.twig' %}
{% block content %}
    <style>
        .wrapper{
            padding-top: 50px !important;
            padding-left: unset !important;
        }
        .header {
            left: 0px !important;
        }
        /* Full height container for the meeting */
        #kt_content {
            padding: 0;
            height: 100vh;
            overflow: hidden;
        }
        /* Base styles for desktop */
        .endbtn-col {
            margin-top: 15%;
        }

        /* Media query for mobile devices */
        @media (max-width: 767px) {
            .endbtn-col {
                margin-top: 50%;
            }
        }
        .end-btn {
            width: 80px;
            height: 80px;
            margin: 0 auto;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .end-btn i {
            font-size: 24px !important; /* Adjust size as needed */
            color: white; /* Adjust color as needed */
        }
        .call-animation {
            background: #fff;
            width: 135px;
            height: 135px;
            position: relative;
            margin: 0 auto;
            border-radius: 100%;
            border: solid 5px #fff;
        }
        .call-animation:before {
            position: absolute;
            content: '';
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            animation: play 3s linear infinite;
            backface-visibility: hidden;
            border-radius: 50%;
        }
        .img-profile {
            width: 125px;
            height: 125px;
            border-radius: 100%;
            position: absolute;
            left: 0px;
            top: 0px;
        }
        @keyframes play {
            0% {
                transform: scale(1);
            }
            15% {
                box-shadow: 0 0 0 5px rgba(255, 255, 255, 0.4);
            }
            25% {
                box-shadow: 0 0 0 10px rgba(255, 255, 255, 0.4), 0 0 0 20px rgba(255, 255, 255, 0.2);
            }
            25% {
                box-shadow: 0 0 0 15px rgba(255, 255, 255, 0.4), 0 0 0 30px rgba(255, 255, 255, 0.2);
            }
            50% {
                box-shadow: 0 0 0 25px rgba(255, 255, 255, 0.4), 0 0 0 50px rgba(255, 255, 255, 0.2);
            }
            100% {
                box-shadow: 0 0 0 25px rgba(255, 255, 255, 0.4), 0 0 0 50px rgba(255, 255, 255, 0.2);
                transform: scale(1.1);
                opacity: 0;
            }
        }

        /* Styles for video background */
        .video-container {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: black;
            overflow: hidden;
            z-index: -1;
            transition: filter 0.5s ease;
        }

        .video-container video {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .video-container.blurred {
            filter: blur(10px);
        }

        /* Overlay for black background */
        .overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.7);
            z-index: 1 !important;
            display: block;
            transition: opacity 0.5s ease;
        }

        .overlay.hidden {
            opacity: 0;
            pointer-events: none;
        }
    </style>
    <!--  BEGIN CONTENT AREA  -->
<div class="d-flex flex-column flex-column-fluid" >
    <div class=" h-lg-100" id="kt_meeting_card">
        <div class="video-container" id="video-container">
            <video id="background-video" autoplay muted></video>
        </div>
        <div class="overlay" id="overlay"></div>
        <audio id="ringtone" src="{{ env.APP_URL }}assets/phone-calling.mp3" preload="auto" loop></audio>
        <div class="layout-px-spacing">
            <div class="middle-content container-xxl p-0" style="z-index: 999;">
                <div class="chat-section layout-top-spacing py-20">
                    <div class="row">
                        <div class="col-xl-12 col-lg-12 col-md-12 p-5">
                            <div class="call-animation">
                                <img class="img-circle img-profile" src="{{ profile_image }}" alt="" width="135"/>
                            </div>
                        </div>
                        <div class="col-xl-12 col-lg-12 col-md-12 p-2">
                            <h5 class="text-light text-center">Video Calling..</h5>
                            <h2 class="text-light text-center"><strong>{{ fullname }}</strong></h2>
                        </div>
                        <div class="col-xl-12 col-lg-12 col-md-12 endbtn-col text-center" style="z-index: 999;">
                            <a onclick="hangUpCall('{{ channel_id }}', '{{ pickup_id }}')" type="button">
                                <div class="bg-danger end-btn">
                                    <img width="38px" src="{{ env.APP_URL }}assets/img/phone-hangup.png" alt="">
                                </div>
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
    <!--  END CONTENT AREA  -->
    <script src="https://code.jquery.com/jquery-3.7.1.min.js" integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script>
    <script>
        $(document).ready(function() {
            const video = document.getElementById('background-video');
            const videoContainer = $('#video-container');
            const overlay = $('#overlay');
            const ringtone = document.getElementById('ringtone');

            function enableCamera() {
                navigator.mediaDevices.getUserMedia({ video: true })
                    .then(stream => {
                        video.srcObject = stream;
                        videoContainer.addClass('blurred'); // Apply blur effect
                        overlay.addClass('hidden'); // Hide overlay
                        ringtone.pause(); // Stop ringing sound
                    })
                    .catch(error => {
                        notie.alert({ type: 'warning', text: 'Error accessing media devices: '+error, time:2})
                        console.error('Error accessing media devices.', error);
                    });
            }

            function checkCallStatus() {
                $.ajax({
                    url: '/call/status',
                    type: 'POST',
                    data: {
                        channel_id: '{{ channel_id }}',
                        pickup_id: '{{ pickup_id }}'
                    },
                    success: function(response) {
                        if (response.status === "pickup") {
                            window.location.href = response.call_link;
                        } else if (response.status === "hangup") {
                            console.log('Call HangUp');
                            window.location.href = '/user/chat/{{ pickup_id }}';
                        }
                    },
                    error: function(error) {
                        console.error('Error checking call status.', error);
                    }
                });
            }

            //ringtone.play();
            enableCamera();

            // Check call status every 1 second
            setInterval(checkCallStatus, 1000);
        });


        function hangUpCall(channelId, user_id= null) {
            $.ajax({
                url: '/call/hangup/' + encodeURIComponent(channelId),
                type: 'POST',
                dataType: 'json',
                success: function(response) {
                    if (response.status === true) {
                        // Redirect to /user/chat if status is true
                        window.location.href = '/user/chat/'+user_id;
                    } else {
                        console.error('Hangup failed: ', response.message || 'Unknown error');
                    }
                },
                error: function(xhr, status, error) {
                    console.error('AJAX Error: ' + status + ' - ' + error);
                }
            });
        }
    </script>
{% endblock %}
