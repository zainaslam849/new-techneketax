{% extends 'user/master.twig' %}
{% block content %}

    <!--  BEGIN CONTENT AREA  -->
    <div id="content"  class="main-content">

        <div id="meet" style="height: 100%;"></div>

    </div>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src='https://meet.techneketax.com/external_api.js'></script>
    <script>
        function StartMeeting(meeting_name, room_name, user_name, user_email, user_image_url){
            const domain = 'meet.techneketax.com';
            const tool_bar_buttons = ['microphone', 'camera',  'hangup'];
            const options = {
                roomName: room_name,
                width: '100%',
                height: '100%',
                parentNode: document.querySelector('#meet'),
                userInfo: {
                    displayName: user_name,
                    email: user_email
                },
                configOverwrite:{
                    doNotStoreRoom: true,
                    startVideoMuted: 0,
                    startWithVideoMuted: false,
                    startWithAudioMuted: false,
                    enableWelcomePage: false,
                    prejoinPageEnabled: false,
                    disableRemoteMute: false,
                    remoteVideoMenu: {
                        disableKick: true
                    },
                    desktopSharingChromeExtId: null, // Extension ID for Chrome
                    desktopSharingChromeDisabled: false,
                    desktopSharingChromeSources: ['screen', 'window', 'tab'],
                    desktopSharingFirefoxExtId: null, // Extension ID for Firefox
                    desktopSharingFirefoxDisabled: false,
                    desktopSharingFrameRate: {
                        min: 5,
                        max: 30
                    }
                },
                interfaceConfigOverwrite: {
                    filmStripOnly: false,
                    SHOW_JITSI_WATERMARK: false,
                    SHOW_WATERMARK_FOR_GUESTS: false,
                    DEFAULT_REMOTE_DISPLAY_NAME: 'New User',
                    TOOLBAR_BUTTONS: tool_bar_buttons
                },
                onload: function () {
                    //alert('loaded');
                    // $('#toolbox').show();
                }
            };
            const apiObj = new JitsiMeetExternalAPI(domain, options);
            apiObj.executeCommand('subject', meeting_name);
            apiObj.addEventListeners({
                readyToClose: function () {
                    $.ajax({
                        url: '/call/hangup/' + room_name,
                        type: 'POST',
                        success: function(response) {
                            console.log('Meeting ended, server notified', response);
                        },
                        error: function(xhr, status, error) {
                            console.error('Failed to notify server on meeting end:', status, error);
                        }
                    });
                    $('#meet').empty();
                },
                participantJoined: function(data){
                    console.log('participantJoined', data);
                    apiObj.executeCommand('subject', meeting_name);
                },
                participantLeft: function(data){
                    console.log('participantLeft', data);
                }
            });
            apiObj.executeCommand('avatarUrl', user_image_url);
        }

        const meeting_name = 'TechnekeTax Video Calling';
        const room_name = '{{ room_id }}';
        const user_name = '{{ loginName }}';
        const user_email = '{{ userEmail }}';
        const user_image = 'https://techneketax.local/assets/dashboard/src/assets/img/profile-30.png';

        StartMeeting(meeting_name, room_name, user_name, user_email, user_image, room_name);
        function checkCallStatus() {
            $.ajax({
                url: '/call/status',
                type: 'POST',
                data: {
                    channel_id: '{{ room_id }}',
                },
                success: function(response) {
                    if (response.status === "hangup") {
                        window.location.href = '/user/chat';
                    } else if (response.status === "true") {
                        // Call not accepted, you can handle this if needed
                    }
                },
                error: function(error) {
                    console.error('Error checking call status.', error);
                }
            });
        }
        setInterval(checkCallStatus, 1000);


    </script>
{% endblock %}
